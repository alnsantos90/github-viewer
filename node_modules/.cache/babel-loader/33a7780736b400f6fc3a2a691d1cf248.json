{"ast":null,"code":"var _jsxFileName = \"/Users/allansantos/Projetos/Project/src/components/Header/Top/Search/index.js\";\nimport React, { useState } from 'react';\nimport { useUsers } from '../../../../Context/Users';\nimport { useLoading } from '../../../../Context/Carregando';\nimport { useErrors } from '../../../../Context/ErrorUsers';\nimport axios from 'axios'; // CSS\n\nimport './index.css';\nexport default (props => {\n  const {\n    setUsers\n  } = useUsers();\n  const {\n    setCarregando\n  } = useLoading();\n  const {\n    err,\n    setErr\n  } = useErrors();\n  const [pesquisa, setPesquisa] = useState(); // FUNÇÃO PARA PUXAR DADOS DA API GITHUB ( NA REFATORAÇÃO UTILIZAR ASYNC , AWAIT )\n\n  function getUserGitHub(user) {\n    setCarregando(true);\n    axios.get(`https://api.github.com/users/${user}`).then(response => {\n      axios.get(`https://api.github.com/users/${user}/repos`).then(repositorys => {\n        const {\n          id,\n          login,\n          avatar_url,\n          html_url,\n          repos_url,\n          name,\n          company,\n          blog,\n          location,\n          bio\n        } = response.data;\n        setCarregando(false);\n        setUsers({\n          id,\n          login,\n          avatar_url,\n          html_url,\n          repos_url,\n          name,\n          company,\n          blog,\n          location,\n          bio,\n          repos: repositorys.data\n        });\n      });\n    });\n  } // INSERE O VALOR DO INPUT NO ESTADO DE PESQUISA\n\n\n  function changeValue(e) {\n    const searchUser = e.target.value;\n    setPesquisa(searchUser);\n  } // INSERE O VALOR DO INPUT NO ESTADO DE USERS ( USERS: RECEBE OS LOGIN \"USER\" PARA REQUISIÇÃO API )\n\n\n  function handleSubmit(search) {\n    setUsers({\n      login: search\n    });\n    getUserGitHub(search);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"search-user\",\n    type: \"text\",\n    placeholder: props.placeholder,\n    onChange: changeValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"orange\",\n    onClick: () => handleSubmit(pesquisa),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"Pesquisar\"));\n});","map":{"version":3,"sources":["/Users/allansantos/Projetos/Project/src/components/Header/Top/Search/index.js"],"names":["React","useState","useUsers","useLoading","useErrors","axios","props","setUsers","setCarregando","err","setErr","pesquisa","setPesquisa","getUserGitHub","user","get","then","response","repositorys","id","login","avatar_url","html_url","repos_url","name","company","blog","location","bio","data","repos","changeValue","e","searchUser","target","value","handleSubmit","search","placeholder"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,aAAP;AAEA,gBAAgBC,KAAD,IAAW;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAeL,QAAQ,EAA7B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAoBL,UAAU,EAApC;AACA,QAAM;AAAEM,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAkBN,SAAS,EAAjC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,EAAxC,CAJwB,CAMxB;;AACA,WAASY,aAAT,CAAuBC,IAAvB,EAA6B;AAC3BN,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAH,IAAAA,KAAK,CAACU,GAAN,CAAW,gCAA+BD,IAAK,EAA/C,EAAkDE,IAAlD,CAAwDC,QAAD,IAAc;AACnEZ,MAAAA,KAAK,CACFU,GADH,CACQ,gCAA+BD,IAAK,QAD5C,EAEGE,IAFH,CAESE,WAAD,IAAiB;AACrB,cAAM;AACJC,UAAAA,EADI;AAEJC,UAAAA,KAFI;AAGJC,UAAAA,UAHI;AAIJC,UAAAA,QAJI;AAKJC,UAAAA,SALI;AAMJC,UAAAA,IANI;AAOJC,UAAAA,OAPI;AAQJC,UAAAA,IARI;AASJC,UAAAA,QATI;AAUJC,UAAAA;AAVI,YAWFX,QAAQ,CAACY,IAXb;AAYArB,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAD,QAAAA,QAAQ,CAAC;AACPY,UAAAA,EADO;AAEPC,UAAAA,KAFO;AAGPC,UAAAA,UAHO;AAIPC,UAAAA,QAJO;AAKPC,UAAAA,SALO;AAMPC,UAAAA,IANO;AAOPC,UAAAA,OAPO;AAQPC,UAAAA,IARO;AASPC,UAAAA,QATO;AAUPC,UAAAA,GAVO;AAWPE,UAAAA,KAAK,EAAEZ,WAAW,CAACW;AAXZ,SAAD,CAAR;AAaD,OA7BH;AA8BD,KA/BD;AAgCD,GAzCuB,CA2CxB;;;AACA,WAASE,WAAT,CAAqBC,CAArB,EAAwB;AACtB,UAAMC,UAAU,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA5B;AACAvB,IAAAA,WAAW,CAACqB,UAAD,CAAX;AACD,GA/CuB,CAiDxB;;;AACA,WAASG,YAAT,CAAsBC,MAAtB,EAA8B;AAC5B9B,IAAAA,QAAQ,CAAC;AAAEa,MAAAA,KAAK,EAAEiB;AAAT,KAAD,CAAR;AACAxB,IAAAA,aAAa,CAACwB,MAAD,CAAb;AACD;;AAED,sBACE,uDACE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAE/B,KAAK,CAACgC,WAHrB;AAIE,IAAA,QAAQ,EAAEP,WAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAE,MAAMK,YAAY,CAACzB,QAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,CADF;AAaD,CApED","sourcesContent":["import React, { useState } from 'react';\r\nimport { useUsers } from '../../../../Context/Users';\r\nimport { useLoading } from '../../../../Context/Carregando';\r\nimport { useErrors } from '../../../../Context/ErrorUsers';\r\nimport axios from 'axios';\r\n\r\n// CSS\r\nimport './index.css';\r\n\r\nexport default (props) => {\r\n  const { setUsers } = useUsers();\r\n  const { setCarregando } = useLoading();\r\n  const { err, setErr } = useErrors();\r\n  const [pesquisa, setPesquisa] = useState();\r\n\r\n  // FUNÇÃO PARA PUXAR DADOS DA API GITHUB ( NA REFATORAÇÃO UTILIZAR ASYNC , AWAIT )\r\n  function getUserGitHub(user) {\r\n    setCarregando(true);\r\n    axios.get(`https://api.github.com/users/${user}`).then((response) => {\r\n      axios\r\n        .get(`https://api.github.com/users/${user}/repos`)\r\n        .then((repositorys) => {\r\n          const {\r\n            id,\r\n            login,\r\n            avatar_url,\r\n            html_url,\r\n            repos_url,\r\n            name,\r\n            company,\r\n            blog,\r\n            location,\r\n            bio,\r\n          } = response.data;\r\n          setCarregando(false);\r\n          setUsers({\r\n            id,\r\n            login,\r\n            avatar_url,\r\n            html_url,\r\n            repos_url,\r\n            name,\r\n            company,\r\n            blog,\r\n            location,\r\n            bio,\r\n            repos: repositorys.data,\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  // INSERE O VALOR DO INPUT NO ESTADO DE PESQUISA\r\n  function changeValue(e) {\r\n    const searchUser = e.target.value;\r\n    setPesquisa(searchUser);\r\n  }\r\n\r\n  // INSERE O VALOR DO INPUT NO ESTADO DE USERS ( USERS: RECEBE OS LOGIN \"USER\" PARA REQUISIÇÃO API )\r\n  function handleSubmit(search) {\r\n    setUsers({ login: search });\r\n    getUserGitHub(search);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        className=\"search-user\"\r\n        type=\"text\"\r\n        placeholder={props.placeholder}\r\n        onChange={changeValue}\r\n      />\r\n      <button className=\"orange\" onClick={() => handleSubmit(pesquisa)}>\r\n        Pesquisar\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}